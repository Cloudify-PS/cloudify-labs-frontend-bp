tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/2.4.1/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-diamond-plugin/1.3.5/plugin.yaml

inputs:

  agent_user:
    type: string
    default: 'centos'

  front_end_lab_sg_name:
    type: string
    default: 'lab_sg'

  labs_server_image_id:
    type: string
    default: 'lab_sg'

  labs_server_flavor_id:
    type: string
    default: 'lab_sg'

  mgmt_network:
    type: string
    default: { get_secret : private_network_name }

  admin_password:
    type: string
    deafult: { get_secret : labs_default_admin_password }

  restore_labs_db:
    type: boolean
    deafult: false

  labs_db_backlup_location:
    type: string
    deafult: { get_secret : db_backup_url }

  sendgrid_api_key:
    type: string
    deafult: { get_secret : sendgrid_api_key }

  cloudify_host:
    type: string
    deafult: { get_secret : cloudify_host }

  cloudify_tenant:
    type: string
    deafult: { get_secret : cloudify_tenant }

  cloudify_user:
    type: string
    deafult: { get_secret : cloudify_user }

  cloudify_port:
    type: string
    deafult: { get_secret : cloudify_port }

  cloudify_password:
    type: string
    deafult: { get_secret : cloudify_password }


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }




node_templates:


##
## Infra
##################

  fe_keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      private_key_path: { get_secret: agent_key_private }
      use_external_resource: True
      resource_id: lab_keypair
      openstack_config: *openstack_config

  lab_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      openstack_config: *openstack_config
      volume:
        size: 80
        imageRef: { get_input: oib_image_id }
        volume_type: { get_input: oib_volume_type }
      boot: true


  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      use_external_resource: True
      resource_id: { get_input: lab_security_group_name }

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input : mgmt_network }

#
# VM's
################

  Labs_FrontEnd_server:
    type: centos7.nodes.MonitoredServer
    properties:
      openstack_config: *openstack_config
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
      server:
        image: { get_input: labs_server_image_id }
        flavor: { get_input: labs_server_flavor_id }
      cloudify_agent:
        user: { get_input: agent_user }
    relationships:
      - target: security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: lab_volume
        type: cloudify.relationships.connected_to
      - target: fe_keypair
        type: cloudify.openstack.server_connected_to_keypair


#
# VM's
################

  maria_db:
    type: maria_db.nodes.DatabaseServer
    properties:

  labs_frontEnd:


outputs:

  integration:
    value: { get_attribute: [ Labs_FrontEnd_server, host_ip ] }




outputs:
